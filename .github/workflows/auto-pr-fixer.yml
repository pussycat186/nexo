name: Auto PR Fixer (acceptance.yml)

on:
  issue_comment:
    types: [created]
  workflow_dispatch: {}

permissions:
  contents: write
  pull-requests: write
  issues: read

jobs:
  open-pr:
    if: >
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'issue_comment' &&
       contains(github.event.comment.body, '/fix-ci'))
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Write robust acceptance.yml
        run: |
          mkdir -p .github/workflows
          cat > .github/workflows/acceptance.yml <<'YML'
          name: Acceptance Tests
          on:
            push:   { branches: [main, develop] }
            pull_request: { branches: [main] }

          jobs:
            acceptance:
              runs-on: ubuntu-latest
              permissions:
                contents: read
              steps:
                - name: Checkout
                  uses: actions/checkout@v4

                - name: Setup Node
                  uses: actions/setup-node@v4
                  with:
                    node-version: '20'

                - name: Detect package manager
                  id: detect
                  run: |
                    if [ -f pnpm-lock.yaml ]; then
                      echo "manager=pnpm" >> $GITHUB_OUTPUT
                      echo "install=pnpm install --frozen-lockfile" >> $GITHUB_OUTPUT
                      echo "has_pnpm=1" >> $GITHUB_OUTPUT
                    elif [ -f yarn.lock ]; then
                      echo "manager=yarn" >> $GITHUB_OUTPUT
                      echo "install=yarn install --frozen-lockfile" >> $GITHUB_OUTPUT
                    else
                      echo "manager=npm" >> $GITHUB_OUTPUT
                      echo "install=npm ci" >> $GITHUB_OUTPUT
                    fi

                - name: Setup PNPM (if needed)
                  if: steps.detect.outputs.has_pnpm == '1'
                  uses: pnpm/action-setup@v3
                  with: { version: 8 }

                - name: Install deps
                  run: ${{ steps.detect.outputs.install }}

                - name: Start server (robust)
                  env:
                    PORT: 5000
                    NODE_ENV: production
                    JWT_SECRET: ci_secret_only
                    JWT_ISSUER: nexo
                  run: |
                    set -e
                    (node dist/index.js || npx --yes tsx server/index.ts) > server.log 2>&1 &
                    echo $! > server.pid
                    # readiness loop
                    for i in {1..40}; do
                      curl -sf http://localhost:5000/api/health && break || sleep 0.5
                    done

                - name: Health performance (5 samples)
                  run: |
                    for i in {1..3}; do curl -s http://localhost:5000/api/health >/dev/null; done
                    FAIL=0
                    for i in {1..5}; do
                      T=$(curl -s -w "%{time_total}" -o /dev/null http://localhost:5000/api/health)
                      py_ms=$(python -c "print(int(float('$T')*1000))")
                      echo "sample $i: ${py_ms}ms"
                      [ $py_ms -gt 200 ] && FAIL=1
                    done
                    [ $FAIL -eq 0 ]

                - name: Prove SQLite fallback banner
                  run: |
                    # CI chạy SQLite khi không có DATABASE_URL
                    if ! grep -E "Using SQLite database at .*/data/nexo\.db" -i server.log; then
                      echo "SQLite banner not found"; tail -n 200 server.log; exit 1
                    fi

                - name: Always tail logs on failure
                  if: failure()
                  run: |
                    echo "===== server.log (last 200) ====="
                    tail -n 200 server.log || true
          YML

      - name: Create PR
        uses: peter-evans/create-pull-request@v6
        with:
            commit-message: "ci: replace acceptance.yml with robust version (node dist || tsx, readiness, SQLite banner)"
            title: "ci: fix acceptance.yml (robust start + health <200ms + SQLite proof)"
            body: |
              Auto-generated by **Auto PR Fixer**.
              - Robust start: `node dist/index.js || npx tsx server/index.ts`
              - Readiness loop for /api/health
              - 5 health samples <200ms
              - Grep server.log banner proving SQLite fallback
              - Tail logs on failure
            branch: ci/fix-acceptance
            delete-branch: true
